--- envoy/bazel/BUILD
+++ envoy/bazel/BUILD
@@ -274,6 +274,11 @@
 )
 
 config_setting(
+    name = "linux_s390x",
+    values = {"cpu": "s390x"},
+)
+
+config_setting(
     name = "windows_x86_64",
     values = {"cpu": "x64_windows"},
 )
@@ -351,6 +356,7 @@ alias(
             ":linux_x86_64": ":linux_x86_64",
             ":linux_aarch64": ":linux_aarch64",
             ":linux_ppc": ":linux_ppc",
+            ":linux_s390x": "linux_s390x",
             ":linux_mips64": ":linux_mips64",
             # If we're not on an linux platform return a value that will never match in the select() statement calling this
             # since it would have already been matched above.
--- envoy/bazel/external/wee8.genrule_cmd
+++ envoy/bazel/external/wee8.genrule_cmd
@@ -2,11 +2,14 @@
 
 set -e
 
-# This works only on Linux-x86_64 and macOS-x86_64.
-if [[ ( `uname` != "Linux" && `uname` != "Darwin" ) || `uname -m` != "x86_64" ]]; then
-  echo "ERROR: wee8 is currently supported only on Linux-x86_64 and macOS-x86_64."
+# This works only on Linux-{x86_64,ppc64le,s390x,aarch64} and macOS-x86_64.
+case "$$(uname -s)-$$(uname -m)" in
+Linux-x86_64|Linux-ppc64le|Linux-s390x|Linux-aarch64|Darwin-x86_64)
+  ;;
+*)
+  echo "ERROR: wee8 is currently supported only on Linux-{x86_64,ppc64le,s390x,aarch64} and macOS-x86_64." >&2
   exit 1
-fi
+esac
 
 # Bazel magic.
 ROOT=$$(dirname $(rootpath wee8/BUILD.gn))/..
@@ -68,7 +71,7 @@ WEE8_BUILD_ARGS+=" v8_use_external_startup_data=false"
 
 # Build wee8.
 third_party/depot_tools/gn gen out/wee8 --args="$$WEE8_BUILD_ARGS"
-third_party/depot_tools/ninja -C out/wee8 wee8
+ninja -C out/wee8 wee8
 
 # Move compiled library to the expected destinations.
 popd
--- envoy/bazel/repositories.bzl
+++ envoy/bazel/repositories.bzl
@@ -796,5 +796,8 @@ def _is_arch(ctxt, arch):
 def _is_linux_ppc(ctxt):
     return _is_linux(ctxt) and _is_arch(ctxt, "ppc")
 
+def _is_linux_s390x(ctxt):
+    return _is_linux(ctxt) and _is_arch(ctxt, "s390x")
+
 def _is_linux_x86_64(ctxt):
     return _is_linux(ctxt) and _is_arch(ctxt, "x86_64")
--- envoy/source/common/api/BUILD
+++ envoy/source/common/api/BUILD
@@ -27,6 +27,7 @@ envoy_cc_library(
         "//bazel:linux_aarch64": ["os_sys_calls_impl_linux.cc"],
         "//bazel:linux_ppc": ["os_sys_calls_impl_linux.cc"],
         "//bazel:linux_mips64": ["os_sys_calls_impl_linux.cc"],
+        "//bazel:linux_s390x": ["os_sys_calls_impl_linux.cc"],
         "//conditions:default": [],
     }) + envoy_select_hot_restart(["os_sys_calls_impl_hot_restart.cc"]),
     hdrs = ["os_sys_calls_impl.h"] + select({
@@ -34,6 +35,7 @@ envoy_cc_library(
         "//bazel:linux_aarch64": ["os_sys_calls_impl_linux.h"],
         "//bazel:linux_ppc": ["os_sys_calls_impl_linux.h"],
         "//bazel:linux_mips64": ["os_sys_calls_impl_linux.h"],
+        "//bazel:linux_s390x": ["os_sys_calls_impl_linux.h"],
         "//conditions:default": [],
     }) + envoy_select_hot_restart(["os_sys_calls_impl_hot_restart.h"]),
     deps = [
--- envoy/source/server/BUILD
+++ envoy/source/server/BUILD
@@ -195,6 +195,7 @@ envoy_cc_library(
         "//bazel:linux_aarch64": ["options_impl_platform_linux.cc"],
         "//bazel:linux_ppc": ["options_impl_platform_linux.cc"],
         "//bazel:linux_mips64": ["options_impl_platform_linux.cc"],
+        "//bazel:linux_s390x": ["options_impl_platform_linux.cc"],
         "//conditions:default": ["options_impl_platform_default.cc"],
     }),
     hdrs = [
@@ -205,6 +206,7 @@ envoy_cc_library(
         "//bazel:linux_aarch64": ["options_impl_platform_linux.h"],
         "//bazel:linux_ppc": ["options_impl_platform_linux.h"],
         "//bazel:linux_mips64": ["options_impl_platform_linux.h"],
+        "//bazel:linux_s390x": ["options_impl_platform_linux.h"],
         "//conditions:default": [],
     }),
     # TCLAP command line parser needs this to support int64_t/uint64_t in several build environments.
